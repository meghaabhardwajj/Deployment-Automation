name: Docker Image Builder & Cloud Run Deploy

on:
  push:
    branches:
      - dev
      - master
      - main
    paths:
      - "gameplay/concept_storyline_processing/**"
      - ".github/workflows/concept-storyline-deploy.yaml"

jobs:
  deploy:
    name: CI/CD for Cloud Run
    runs-on: deafult-runner-01
    environment: blkbox-infrastructure
    permissions:
      id-token: write
      contents: read

    steps:
     - name: Check out repository
       uses: actions/checkout@v4  

     - name: GCP Auth
       id: auth
       uses: google-github-actions/auth@v2
       with:
         token_format: access_token
         workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
         service_account: ${{ vars.SERVICE_ACCOUNT }}

     - name: Login to Artifact Registry
       uses: docker/login-action@v3
       with:
         registry: us-east1-docker.pkg.dev
         username: oauth2accesstoken
         password: ${{ steps.auth.outputs.access_token }}   

     - name: Check Branch
       id: environment_name
       run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ] || [ "${{ github.ref }}" = "refs/heads/master" ]; then
            echo "environment=prod" >> $GITHUB_OUTPUT
          else
            echo "environment=dev" >> $GITHUB_OUTPUT
          fi

     - name: Build & Push Image
       run: make push env=${{ steps.environment_name.outputs.environment }}
       working-directory: ./gameplay/concept_storyline_processing

     - name: Get Image URL from Makefile
       id: image
       run: |
         IMAGE_URL=$(make -s -f Makefile env=${{ steps.environment_name.outputs.environment }} --eval "print: ; @echo \$(IMAGE_URL)" print)
         echo "image_url=$IMAGE_URL" >> $GITHUB_OUTPUT
       working-directory: ./gameplay/concept_storyline_processing

     - name: Setup Terraform
       uses: hashicorp/setup-terraform@v3

     - name: Terraform Init
       run: terraform init
       working-directory: ./infra/cloud_run_terraform

     - name: Terraform Plan
       run: |
         if [[ "${{ steps.set_env.outputs.environment }}" == "dev" ]]; then
           terraform plan \
             -var="dev_concept_storyline_image_tag=${{ steps.image.outputs.image_url }}" \
             -var="prod_concept_storyline_image_tag=$(terraform output -raw prod_concept_storyline_image_tag || echo '')" \
             -target=google_cloud_run_service.dev_concept_storyline_service
         else
           terraform plan \
             -var="prod_concept_storyline_image_tag=${{ steps.image.outputs.image_url }}" \
             -var="dev_concept_storyline_image_tag=$(terraform output -raw dev_concept_storyline_image_tag || echo '')" \
             -target=google_cloud_run_service.prod_concept_storyline_service
         fi
      working-directory: ./infra/cloud_run_terraform

     - name: Terraform Apply
       run: |
         if [[ "${{ steps.set_env.outputs.environment }}" == "dev" ]]; then
           terraform apply -auto-approve \
             -var="dev_concept_storyline_image_tag=${{ steps.image.outputs.image_url }}" \
             -var="prod_concept_storyline_image_tag=$(terraform output -raw prod_concept_storyline_image_tag || echo '')" \
             -target=google_cloud_run_service.dev_concept_storyline_service
         else
           terraform apply -auto-approve \
             -var="prod_concept_storyline_image_tag=${{ steps.image.outputs.image_url }}" \
             -var="dev_concept_storyline_image_tag=$(terraform output -raw dev_concept_storyline_image_tag || echo '')" \
             -target=google_cloud_run_service.prod_concept_storyline_service
         fi
       working-directory: ./infra/cloud_run_terraform
